<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<application>
    <packageName>net.sourceforge.opencamera</packageName>
    <components>
        <Component>
            <type>activity</type>
            <name>net.sourceforge.opencamera.MainActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <actions>android.media.action.IMAGE_CAPTURE</actions>
                    <actions>android.media.action.IMAGE_CAPTURE_SECURE</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA_SECURE</actions>
                    <actions>android.media.action.VIDEO_CAMERA</actions>
                    <actions>android.media.action.VIDEO_CAPTURE</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <actions>android.media.action.IMAGE_CAPTURE</actions>
                    <actions>android.media.action.IMAGE_CAPTURE_SECURE</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA_SECURE</actions>
                    <actions>android.media.action.VIDEO_CAMERA</actions>
                    <actions>android.media.action.VIDEO_CAPTURE</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <actions>android.media.action.IMAGE_CAPTURE</actions>
                    <actions>android.media.action.IMAGE_CAPTURE_SECURE</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA_SECURE</actions>
                    <actions>android.media.action.VIDEO_CAMERA</actions>
                    <actions>android.media.action.VIDEO_CAPTURE</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <actions>android.media.action.IMAGE_CAPTURE</actions>
                    <actions>android.media.action.IMAGE_CAPTURE_SECURE</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA_SECURE</actions>
                    <actions>android.media.action.VIDEO_CAMERA</actions>
                    <actions>android.media.action.VIDEO_CAPTURE</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <actions>android.media.action.IMAGE_CAPTURE</actions>
                    <actions>android.media.action.IMAGE_CAPTURE_SECURE</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA_SECURE</actions>
                    <actions>android.media.action.VIDEO_CAMERA</actions>
                    <actions>android.media.action.VIDEO_CAPTURE</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <actions>android.media.action.IMAGE_CAPTURE</actions>
                    <actions>android.media.action.IMAGE_CAPTURE_SECURE</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA_SECURE</actions>
                    <actions>android.media.action.VIDEO_CAMERA</actions>
                    <actions>android.media.action.VIDEO_CAPTURE</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <actions>android.media.action.IMAGE_CAPTURE</actions>
                    <actions>android.media.action.IMAGE_CAPTURE_SECURE</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA</actions>
                    <actions>android.media.action.STILL_IMAGE_CAMERA_SECURE</actions>
                    <actions>android.media.action.VIDEO_CAMERA</actions>
                    <actions>android.media.action.VIDEO_CAPTURE</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>net.sourceforge.opencamera.remotecontrol.DeviceScanner</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>net.sourceforge.opencamera.Remotecontrol.DeviceScanner</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>net.sourceforge.opencamera.TakePhoto</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>net.sourceforge.opencamera.MyTileService</name>
            <RequiredPermissions>
                <PRM>BIND_QUICK_SETTINGS_TILE</PRM>
            </RequiredPermissions>
            <IntentFilter>
                <filter>
                    <actions>android.service.quicksettings.action.QS_TILE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>net.sourceforge.opencamera.MyTileServiceVideo</name>
            <RequiredPermissions>
                <PRM>BIND_QUICK_SETTINGS_TILE</PRM>
            </RequiredPermissions>
            <IntentFilter>
                <filter>
                    <actions>android.service.quicksettings.action.QS_TILE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>net.sourceforge.opencamera.MyTileServiceFrontCamera</name>
            <RequiredPermissions>
                <PRM>BIND_QUICK_SETTINGS_TILE</PRM>
            </RequiredPermissions>
            <IntentFilter>
                <filter>
                    <actions>android.service.quicksettings.action.QS_TILE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>net.sourceforge.opencamera.MyWidgetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>net.sourceforge.opencamera.MyWidgetProviderTakePhoto</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
    </components>
    <newIntents>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.SENSOR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rpg9u0l34mil7srstdn533mvtu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void stoppedVideo(int,android.net.Uri,java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>5nckpq0l68qtigahf345l3vcr5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void restartOpenCamera()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>agc57j4gd62ah21umpju9ej80f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_VIDEO"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>oj3o6d4fj1fbgscc24ddjft1e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl: void startRemoteControl()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl</sender>
            <component>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>bmb1podekv6hg4s235ujr298lj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>t1mm54l1982qcsluf933p8ngae</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl: void startRemoteControl()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl</sender>
            <component>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>kb2opcckhmm24gmh4h44ara96g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGhostImageChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"image/*"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>usasvm7o0pon4dn1n3tq4oa7vr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineHelp()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3lhd6oufai4n5vpomjor0ckv4c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils$1: void onScanCompleted(java.lang.String,android.net.Uri)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>j2o7fp1d73vsno1unbtakk7j3j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"com.android.camera.action.REVIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b2e9fmfuf9ap6kk2leba0rqf7g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6dbsdcc5hoa505mur4ekpau6ia</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"com.android.camera.action.REVIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rnhc5kicrb6jk1mlvc0sjrftul</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"com.android.camera.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f3mnibg1vod510mcep7sest78t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_VIDEO"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>foqj0uf8ngd0d9v86phrelsbmo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.SENSOR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hs89rqkmu5vsfuu2nnd96gtjsl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"com.android.camera.action.REVIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l9ginomrtstomlppi8gvf8ltl1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openFolderChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT_TREE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>kigf6q306v1rlm1sknjmrugj3o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void stoppedVideo(int,android.net.Uri,java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>v1cvtf8q4r3385l492f9bjblsd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>udrjr8d39e9fotd0usjs221cno</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineHelp()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mpetrbmsen6u36mqgfpeqepud9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void restartOpenCamera()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vsskjd166mf9nio3f9frqt6dm3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineLicences()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>n7qkq814smvj945v6bkmu9fh6q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openLoadSettingsChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"text/xml"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>i9ctaec31f7ngsplf5v5d3i21t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.COMMAND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>759elshdh9a766kv08vm7mja3l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.ImageSaver: boolean saveSingleImageNow(net.sourceforge.opencamera.ImageSaver$Request,byte[],android.graphics.Bitmap,java.lang.String,boolean,boolean,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.ImageSaver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>sl6tlli9lpic4baoub17ajlu2i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.DeviceScanner: void startScanning()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.DeviceScanner</sender>
            <component></component>
            <action>"android.bluetooth.adapter.action.REQUEST_ENABLE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>u8f3t4m0nele5iq4plqfb4kqi9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jm4jn81dupmjlackt8pgsmf09t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"com.android.camera.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hj6va1dak9ufg51pk1579fi0a7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.ImageSaver: boolean saveSingleImageNow(net.sourceforge.opencamera.ImageSaver$Request,byte[],android.graphics.Bitmap,java.lang.String,boolean,boolean,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.ImageSaver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>vobonl5u2vvnvvc4mqi2sirocg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2ov0l4siaeb65gj05kpk1562jq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.DeviceScanner: void startScanning()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.DeviceScanner</sender>
            <component></component>
            <action>"android.bluetooth.adapter.action.REQUEST_ENABLE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>c0ic0nkhtoe6otih0jguk22tl2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openLoadSettingsChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"text/xml"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>nf00i5g92187858pvnh6ttria2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl: void startRemoteControl()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl</sender>
            <component>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>9pndtba4maj3ch2ou7jp23d33l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.ImageSaver: boolean saveSingleImageNow(net.sourceforge.opencamera.ImageSaver$Request,byte[],android.graphics.Bitmap,java.lang.String,boolean,boolean,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.ImageSaver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>jagd2t35usvd62g138f4hqm3k4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlinePrivacyPolicy()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jlk4bocjtqb5eo2d06j6dbmk22</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlinePrivacyPolicy()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fs61qu06e3r9rnhbmmpu3q9rfj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_VIDEO"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sjgqh2hlr08ktrm62anoham6qv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils$1: void onScanCompleted(java.lang.String,android.net.Uri)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>dujoffd2khvcae5fn1b0oals8p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.TakePhoto: void onCreate(android.os.Bundle)</calledAt>
            <sender>net.sourceforge.opencamera.TakePhoto</sender>
            <component>net.sourceforge.opencamera.MainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jvj7b4v4bbo2smhdt8h281llr8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_VIDEO"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j7jiv1mv4fj3vb7d55ps1cvljn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void restartOpenCamera()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lp7e94vkt0bloh27duom7m6tsa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openFolderChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT_TREE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>h6e5g9vil8l96oieh01khf4dmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.TakePhoto: void onCreate(android.os.Bundle)</calledAt>
            <sender>net.sourceforge.opencamera.TakePhoto</sender>
            <component>net.sourceforge.opencamera.MainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jfc95p219m4ilhs0fp0dkefub2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void stoppedVideo(int,android.net.Uri,java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>bbd2r6qeqpjmh2dee00m17bkpc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2j6cj68pcm0brvk838odoql3pb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bvf3gpuq2q42qi10p8esfhagat</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.DeviceScanner: void startScanning()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.DeviceScanner</sender>
            <component></component>
            <action>"android.bluetooth.adapter.action.REQUEST_ENABLE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>r7na1aqi2bh8902hhvsbm2s40p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void shareLastImage()</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4st5pub1b8hft2sif7hr5bn0ak</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.COMMAND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>82sp1jovf60218vcf6m26niv55</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l28srlbrnlu4moth3dphdgvjt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGhostImageChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"image/*"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>qh59m0tk90nn3ddqort93q3ue</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void stoppedVideo(int,android.net.Uri,java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>oc8cih1kaqjpbr73oaf48891hk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openLoadSettingsChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"text/xml"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>e7ii9k4l77m6c1dkvt2d9ln5rh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openFolderChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT_TREE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>i7bu2k7iinqmipdgeli4jkqg3p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils$1: void onScanCompleted(java.lang.String,android.net.Uri)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ohnset9mmjeauo4uengb7t2cl2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGhostImageChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"image/*"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>k1c1rplahfkpivihci54ufv72c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGallery()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"com.android.camera.action.REVIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2nsn895kehgntunca2deksd18</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>46jijd851cueujb6g3rcl6fto4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void shareLastImage()</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cb71flsc6bktkdbt52b3mr32gl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void shareLastImage()</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ctdll9hdoki3vbvr9fju8v7bt5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlinePrivacyPolicy()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o8lsfo8r7lvgcolka8j7h13eb3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openFolderChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT_TREE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>nbatq371djc9jdehec2d93ts18</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.DeviceScanner: void startScanning()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.DeviceScanner</sender>
            <component></component>
            <action>"android.bluetooth.adapter.action.REQUEST_ENABLE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>ph0udbdkgp3tn29g2i6so4fk01</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.COMMAND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cd7pciinerla5906gcf6k6t3g5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cur2d0coa2rpg8t35deie68rup</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineHelp()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r38oot6fha51feq89j18u74k2r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineLicences()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d3g772h96dnjilnucot63fqlue</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MyApplicationInterface: void shareLastImage()</calledAt>
            <sender>net.sourceforge.opencamera.MyApplicationInterface</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pdtvrhe2b7p59iluqad050a27k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineHelp()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hdb81hero75n9ppchbsut19i7b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"com.android.camera.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e6d2ibujg4uq3q5ksnaein22mv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openLoadSettingsChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"text/xml"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>nmjgjhoksii6fif0imrkeigv17</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils$1: void onScanCompleted(java.lang.String,android.net.Uri)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>alf0p9tmr3ifgcg2vd075lijhe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.SENSOR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f6vsun5506ra16kqthckutj63</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineLicences()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>s6sf30ilfh2ojkilo69emj0a7p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.SENSOR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hpgte6ma4llog0k8uqcn35eh3j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"com.android.camera.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j7ejs6p3tjj28d8jl4d4klgrbh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void openGhostImageChooserDialogSAF(boolean)</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.OPEN_DOCUMENT"</action>
            <dataType>"image/*"</dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <categories>"android.intent.category.OPENABLE"</categories>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>hfsjnoh1j33qp7p9slgk6375fo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl: void startRemoteControl()</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl</sender>
            <component>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>l9osm8d4n2v97u83b5ds2bde8m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void restartOpenCamera()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vo43l12ke2nnv3f8obejvh8g3a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>s014i0v9upu6g770n2hh5vdo2r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlinePrivacyPolicy()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1iee80rop06bpk8erd9q6vnfi9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.remotecontrol.BluetoothLeService: void broadcastUpdate(java.lang.String,android.bluetooth.BluetoothGattCharacteristic)</calledAt>
            <sender>net.sourceforge.opencamera.remotecontrol.BluetoothLeService</sender>
            <component></component>
            <action>"net.sourceforge.opencamera.Remotecontrol.COMMAND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>r577q19r736jvf5sbofb0227m6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.TakePhoto: void onCreate(android.os.Bundle)</calledAt>
            <sender>net.sourceforge.opencamera.TakePhoto</sender>
            <component>net.sourceforge.opencamera.MainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fb5np2ncabfh1v1llmqirjlcj2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.StorageUtils: void announceUri(android.net.Uri,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.StorageUtils</sender>
            <component></component>
            <action>"android.hardware.action.NEW_PICTURE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>m1b02fo3qh8fogr021888vkt2v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.MainActivity: void launchOnlineLicences()</calledAt>
            <sender>net.sourceforge.opencamera.MainActivity</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qjieuagh8gl8kqfbd47375ufmo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.ImageSaver: boolean saveSingleImageNow(net.sourceforge.opencamera.ImageSaver$Request,byte[],android.graphics.Bitmap,java.lang.String,boolean,boolean,boolean,boolean)</calledAt>
            <sender>net.sourceforge.opencamera.ImageSaver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>9fkg3rtaqhjop6r3iibhr2kk4m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>net.sourceforge.opencamera.TakePhoto: void onCreate(android.os.Bundle)</calledAt>
            <sender>net.sourceforge.opencamera.TakePhoto</sender>
            <component>net.sourceforge.opencamera.MainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5oeh92vkqmf87t4oq2us3tpr9g</id>
            <random/>
        </Intent>
    </newIntents>
    <ContentProviders>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>net.sourceforge.opencamera.StorageUtils: java.lang.String getDataColumn(android.net.Uri,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>net.sourceforge.opencamera.StorageUtils: net.sourceforge.opencamera.StorageUtils$Media getLatestMedia(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>net.sourceforge.opencamera.StorageUtils: java.lang.String getFileName(android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
    </ContentProviders>
    <usesPermissions>
        <permission>WRITE_EXTERNAL_STORAGE</permission>
        <permission>CAMERA</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>BLUETOOTH</permission>
        <permission>BLUETOOTH_ADMIN</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
    </usesPermissions>
    <actuallyUsesPermissions>
        <permission>RECORD_AUDIO</permission>
        <permission>CAMERA</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>BLUETOOTH</permission>
    </actuallyUsesPermissions>
    <requiredPermissions/>
    <apkFile>../../../app_repo/opencamera/net.sourceforge.opencamera_74.apk</apkFile>
    <name>net_sourceforge_opencamera_74</name>
</application>
